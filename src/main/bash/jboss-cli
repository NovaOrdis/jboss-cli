#!/bin/bash

#
# Command-line wrapper script - generated from Nova Ordis Release Tools' run-wrapper-template
#
# For more details see https://kb.novaordis.com/index.php/novaordis-release-tools
#

[ -f $(dirname $0)/jboss-cli.shlib ] && . $(dirname $0)/jboss-cli.shlib || { echo "required library $(dirname $0)/jboss-cli.shlib not found" 1>&2; exit 1; }

reldir=$(dirname $0)
main_class=${main_class}
verbose=false
jboss_home=/Users/ovidiu/runtime/jboss-eap-6.4.6

function debug() {
    ${verbose} && echo "$@" 1>&2;
    return 0
}

function debug-arguments {
    ${verbose} && echo "${FUNCNAME[1]}($@)" 1>&2;
    return 0
}

function fail {
    echo "[error]: $@" 1>&2 && exit 1
}

function get_java_home() {
    # local java_home="/usr/java/jdk64-1.7.0_45"
    local java_home=""

    if [ -n "${JAVA_HOME}" ]; then
        debug "using JAVA_HOME from environment ${JAVA_HOME}"
        java_home=${JAVA_HOME}
    else
        local name;
        name=$(uname -n)
        name=${name##*.}

        [ "${name}" = "local" -o "${name}" = "ovidius-mbp" ] && java_home="/Library/Java/JavaVirtualMachines/jdk1.7.0_60.jdk/Contents/Home"
    fi

    echo ${java_home}
}

function get_classpath() {

    debug "${FUNCNAME[0]}: home_dir=${home_dir}"

    local jboss_cli_classpath

    jboss_cli_classpath=$(get-jboss-cli-classpath ${jboss_home}) || exit 1

    local classpath=$(dirname $0)/../../../target/novaordis-jboss-cli-1.0.0-SNAPSHOT-1.jar:${jboss_cli_classpath}

    #echo ">>>: ${classpath}" 1>&2;
    echo ${classpath}
}

debug_args=""
output_settings=""

while [ "$1" != "" ]; do
    if [ "$1" = "--debug" ]; then
        debug_args="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5011"
        verbose=true
    elif [ "$1" = "--verbose" -o "$1" = "-v" ]; then
        verbose=true
    else
        #
        # if the argument contains spaces, it means double quotes were used, we need to pass those down so the java
        # command parsing line logic can detect quoted strings; more than that, if the double quoted string contains
        # escaped quotes, we want to pass them as such
        #
        if [ "$1" = "${1/ //}" ]; then
            # no spaces, pass as is
            args="${args} $1"
        else
            # quoted string that contains spaces, escape inner quotes, in case they exist
            escaped_inner_quotes=${1//\"/\\\"}
            args="${args} \"${escaped_inner_quotes}\""
        fi
    fi
    shift;
done

java_home=$(get_java_home) || fail "failed to get JAVA_HOME"
classpath=$(get_classpath) || fail "failed to build classpath"
java_bin="java"
[ "${java_home}" != "" ] && java_bin="${java_home}/bin/java"

command="${java_bin} -cp ${classpath} ${debug_args} io.novaordis.jboss.cli.Main ${args}"

${verbose} && echo ${command}

${command}


